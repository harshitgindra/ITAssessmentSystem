//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITAssessmentSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AssessmentEntities : DbContext
    {
        public AssessmentEntities()
            : base("name=AssessmentEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ADMIN_LOGIN> ADMIN_LOGIN { get; set; }
        public virtual DbSet<DEPARTMENT> DEPARTMENTS { get; set; }
        public virtual DbSet<RUBRICS_DATA> RUBRICS_DATA { get; set; }
        public virtual DbSet<USER_INFO> USER_INFO { get; set; }
        public virtual DbSet<ASSESSMENT_DATA> ASSESSMENT_DATA { get; set; }
        public virtual DbSet<ASSESSMENT_LINK> ASSESSMENT_LINK { get; set; }
    
        public virtual int spASSESSMENT_GETSEARCHRESULTS(string param)
        {
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spASSESSMENT_GETSEARCHRESULTS", paramParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spASSESSMENT_VERIFYINSTRUCTOR(string instructor_EmailID)
        {
            var instructor_EmailIDParameter = instructor_EmailID != null ?
                new ObjectParameter("Instructor_EmailID", instructor_EmailID) :
                new ObjectParameter("Instructor_EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spASSESSMENT_VERIFYINSTRUCTOR", instructor_EmailIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spASSESSMENT_VERIFYOUTCOME_DEPT(string outcome, string department_cd)
        {
            var outcomeParameter = outcome != null ?
                new ObjectParameter("Outcome", outcome) :
                new ObjectParameter("Outcome", typeof(string));
    
            var department_cdParameter = department_cd != null ?
                new ObjectParameter("Department_cd", department_cd) :
                new ObjectParameter("Department_cd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spASSESSMENT_VERIFYOUTCOME_DEPT", outcomeParameter, department_cdParameter);
        }
    
        public virtual int spInstructorAddNew(string instructorName, string instructorEmailID)
        {
            var instructorNameParameter = instructorName != null ?
                new ObjectParameter("InstructorName", instructorName) :
                new ObjectParameter("InstructorName", typeof(string));
    
            var instructorEmailIDParameter = instructorEmailID != null ?
                new ObjectParameter("InstructorEmailID", instructorEmailID) :
                new ObjectParameter("InstructorEmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInstructorAddNew", instructorNameParameter, instructorEmailIDParameter);
        }
    
        public virtual int spINSTRUCTORDELETE(string instructorEmailID)
        {
            var instructorEmailIDParameter = instructorEmailID != null ?
                new ObjectParameter("InstructorEmailID", instructorEmailID) :
                new ObjectParameter("InstructorEmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spINSTRUCTORDELETE", instructorEmailIDParameter);
        }
    
        public virtual int spINSTRUCTOREDIT(string instructorEmailID, string instructorName)
        {
            var instructorEmailIDParameter = instructorEmailID != null ?
                new ObjectParameter("InstructorEmailID", instructorEmailID) :
                new ObjectParameter("InstructorEmailID", typeof(string));
    
            var instructorNameParameter = instructorName != null ?
                new ObjectParameter("InstructorName", instructorName) :
                new ObjectParameter("InstructorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spINSTRUCTOREDIT", instructorEmailIDParameter, instructorNameParameter);
        }
    
        public virtual ObjectResult<spINSTRUCTORGETALLRECORDS_Result> spINSTRUCTORGETALLRECORDS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spINSTRUCTORGETALLRECORDS_Result>("spINSTRUCTORGETALLRECORDS");
        }
    
        public virtual ObjectResult<spINSTRUCTORGETDETAILS_Result> spINSTRUCTORGETDETAILS(string instructorEmailID)
        {
            var instructorEmailIDParameter = instructorEmailID != null ?
                new ObjectParameter("InstructorEmailID", instructorEmailID) :
                new ObjectParameter("InstructorEmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spINSTRUCTORGETDETAILS_Result>("spINSTRUCTORGETDETAILS", instructorEmailIDParameter);
        }
    
        public virtual int spLINK_INSERT(string random_string, string outcomes, string department_CD, string instructor_email, Nullable<bool> link_status)
        {
            var random_stringParameter = random_string != null ?
                new ObjectParameter("random_string", random_string) :
                new ObjectParameter("random_string", typeof(string));
    
            var outcomesParameter = outcomes != null ?
                new ObjectParameter("outcomes", outcomes) :
                new ObjectParameter("outcomes", typeof(string));
    
            var department_CDParameter = department_CD != null ?
                new ObjectParameter("department_CD", department_CD) :
                new ObjectParameter("department_CD", typeof(string));
    
            var instructor_emailParameter = instructor_email != null ?
                new ObjectParameter("instructor_email", instructor_email) :
                new ObjectParameter("instructor_email", typeof(string));
    
            var link_statusParameter = link_status.HasValue ?
                new ObjectParameter("link_status", link_status) :
                new ObjectParameter("link_status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLINK_INSERT", random_stringParameter, outcomesParameter, department_CDParameter, instructor_emailParameter, link_statusParameter);
        }
    
        public virtual ObjectResult<spLOGIN_Result> spLOGIN(string adminUsername, string adminPassword)
        {
            var adminUsernameParameter = adminUsername != null ?
                new ObjectParameter("adminUsername", adminUsername) :
                new ObjectParameter("adminUsername", typeof(string));
    
            var adminPasswordParameter = adminPassword != null ?
                new ObjectParameter("adminPassword", adminPassword) :
                new ObjectParameter("adminPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLOGIN_Result>("spLOGIN", adminUsernameParameter, adminPasswordParameter);
        }
    
        public virtual int spRUBRIC_DELETE_RUBRICROW(Nullable<int> rUBID)
        {
            var rUBIDParameter = rUBID.HasValue ?
                new ObjectParameter("RUBID", rUBID) :
                new ObjectParameter("RUBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRUBRIC_DELETE_RUBRICROW", rUBIDParameter);
        }
    
        public virtual ObjectResult<spRUBRICGETPERFORMANCEINDICATORS_Result> spRUBRICGETPERFORMANCEINDICATORS(string dEPARTMENT)
        {
            var dEPARTMENTParameter = dEPARTMENT != null ?
                new ObjectParameter("DEPARTMENT", dEPARTMENT) :
                new ObjectParameter("DEPARTMENT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRUBRICGETPERFORMANCEINDICATORS_Result>("spRUBRICGETPERFORMANCEINDICATORS", dEPARTMENTParameter);
        }
    
        public virtual ObjectResult<spRUBRICGETSEARCHRESULTS_Result> spRUBRICGETSEARCHRESULTS(string dEPARTMENT, string oUTCOMES)
        {
            var dEPARTMENTParameter = dEPARTMENT != null ?
                new ObjectParameter("DEPARTMENT", dEPARTMENT) :
                new ObjectParameter("DEPARTMENT", typeof(string));
    
            var oUTCOMESParameter = oUTCOMES != null ?
                new ObjectParameter("OUTCOMES", oUTCOMES) :
                new ObjectParameter("OUTCOMES", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRUBRICGETSEARCHRESULTS_Result>("spRUBRICGETSEARCHRESULTS", dEPARTMENTParameter, oUTCOMESParameter);
        }
    
        public virtual ObjectResult<spRUBRICSGETRECORD_RUBID_Result> spRUBRICSGETRECORD_RUBID(Nullable<int> rUB_ROWID)
        {
            var rUB_ROWIDParameter = rUB_ROWID.HasValue ?
                new ObjectParameter("RUB_ROWID", rUB_ROWID) :
                new ObjectParameter("RUB_ROWID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRUBRICSGETRECORD_RUBID_Result>("spRUBRICSGETRECORD_RUBID", rUB_ROWIDParameter);
        }
    
        public virtual int spUPDATERUBRICDATA(Nullable<int> rUBRIC_ROWID, string oUTCOMES, string pERFORMANCE_INDICATOR, string tOPIC, string pOOR, string dEVELOPING, string dEVELOPED, string eXEMPLARY, Nullable<int> eXPECTED_LEVEL)
        {
            var rUBRIC_ROWIDParameter = rUBRIC_ROWID.HasValue ?
                new ObjectParameter("RUBRIC_ROWID", rUBRIC_ROWID) :
                new ObjectParameter("RUBRIC_ROWID", typeof(int));
    
            var oUTCOMESParameter = oUTCOMES != null ?
                new ObjectParameter("OUTCOMES", oUTCOMES) :
                new ObjectParameter("OUTCOMES", typeof(string));
    
            var pERFORMANCE_INDICATORParameter = pERFORMANCE_INDICATOR != null ?
                new ObjectParameter("PERFORMANCE_INDICATOR", pERFORMANCE_INDICATOR) :
                new ObjectParameter("PERFORMANCE_INDICATOR", typeof(string));
    
            var tOPICParameter = tOPIC != null ?
                new ObjectParameter("TOPIC", tOPIC) :
                new ObjectParameter("TOPIC", typeof(string));
    
            var pOORParameter = pOOR != null ?
                new ObjectParameter("POOR", pOOR) :
                new ObjectParameter("POOR", typeof(string));
    
            var dEVELOPINGParameter = dEVELOPING != null ?
                new ObjectParameter("DEVELOPING", dEVELOPING) :
                new ObjectParameter("DEVELOPING", typeof(string));
    
            var dEVELOPEDParameter = dEVELOPED != null ?
                new ObjectParameter("DEVELOPED", dEVELOPED) :
                new ObjectParameter("DEVELOPED", typeof(string));
    
            var eXEMPLARYParameter = eXEMPLARY != null ?
                new ObjectParameter("EXEMPLARY", eXEMPLARY) :
                new ObjectParameter("EXEMPLARY", typeof(string));
    
            var eXPECTED_LEVELParameter = eXPECTED_LEVEL.HasValue ?
                new ObjectParameter("EXPECTED_LEVEL", eXPECTED_LEVEL) :
                new ObjectParameter("EXPECTED_LEVEL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUPDATERUBRICDATA", rUBRIC_ROWIDParameter, oUTCOMESParameter, pERFORMANCE_INDICATORParameter, tOPICParameter, pOORParameter, dEVELOPINGParameter, dEVELOPEDParameter, eXEMPLARYParameter, eXPECTED_LEVELParameter);
        }
    
        public virtual int spASSESSMENT_DELETE_OLD_RECORDS(string random_string)
        {
            var random_stringParameter = random_string != null ?
                new ObjectParameter("random_string", random_string) :
                new ObjectParameter("random_string", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spASSESSMENT_DELETE_OLD_RECORDS", random_stringParameter);
        }
    
        public virtual int spLINK_UPDATESTATUS(string random_string, Nullable<bool> status)
        {
            var random_stringParameter = random_string != null ?
                new ObjectParameter("random_string", random_string) :
                new ObjectParameter("random_string", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLINK_UPDATESTATUS", random_stringParameter, statusParameter);
        }
    
        public virtual ObjectResult<spASSESSMENT_RECORDS_Result> spASSESSMENT_RECORDS(string param)
        {
            var paramParameter = param != null ?
                new ObjectParameter("param", param) :
                new ObjectParameter("param", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spASSESSMENT_RECORDS_Result>("spASSESSMENT_RECORDS", paramParameter);
        }
    
        public virtual int spLink_DELETE(string randomString)
        {
            var randomStringParameter = randomString != null ?
                new ObjectParameter("randomString", randomString) :
                new ObjectParameter("randomString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLink_DELETE", randomStringParameter);
        }
    
        public virtual ObjectResult<spLink_Details_Result> spLink_Details()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLink_Details_Result>("spLink_Details");
        }
    }
}
