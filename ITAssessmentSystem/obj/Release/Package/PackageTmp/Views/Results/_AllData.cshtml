@using PagedList;
@using PagedList.Mvc;
@model IPagedList<ITAssessmentSystem.Models.spASSESSMENT_RECORDS_Result>

<table class="table table-bordered">
    <tr>
        <th>
            @Html.ActionLink("Professor", "AllData", new { param = Request.QueryString["param"], page = 1, column = "Instructor", sortOrder = ViewBag.Order })
        </th>
        <th>
            @Html.ActionLink("Department", "AllData", new { param = Request.QueryString["param"], page = 1, column = "department", sortOrder = ViewBag.Order })
        </th>
        <th>
            @Html.ActionLink("Semester", "AllData", new { param = Request.QueryString["param"], page = 1, column = "semester", sortOrder = ViewBag.Order })
        </th>
        <th>
            @Html.ActionLink("Year", "AllData", new { param = Request.QueryString["param"], page = 1, column = "year", sortOrder = ViewBag.Order })
        </th>
        <th>
            @Html.ActionLink("Course", "AllData", new { param = Request.QueryString["param"], page = 1, column = "course", sortOrder = ViewBag.Order })
        </th>
        <th>
            @Html.ActionLink("Performance Indicator", "AllData", new { param = Request.QueryString["param"], page = 1, column = "performanceIndicator", sortOrder = ViewBag.Order })
        </th>
        <th>
            @Html.ActionLink("Topic", "AllData", new { param = Request.QueryString["param"], page = 1, column = "topic", sortOrder = ViewBag.Order })
        </th>
        <th>
            @Html.DisplayName("Poor")
        </th>
        <th>
            @Html.DisplayName("Developing")
        </th>
        <th>
            @Html.DisplayName("Developed")
        </th>
        <th>
            @Html.DisplayName("Exemplary")
        </th>
        <th>
            @Html.DisplayName("Actual Level")
        </th>
        <th>
            @Html.DisplayName("Expected Level")
        </th>

    </tr>
    @foreach (var item in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.INSTRUCTOR_NAME)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DEPARTMENT_DESC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SEMESTER)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YEAR)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.COURSE)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PERFORMANCE_INDICATOR)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TOPIC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.POOR)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DEVELOPING)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DEVELOPED)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EXEMPLARY)
            </td>
            <td>
                @{
        ViewBag.ActualLevel = Math.Ceiling((double)((item.DEVELOPED + item.EXEMPLARY) /
        (double)(item.POOR + item.DEVELOPING + item.DEVELOPED + item.EXEMPLARY)) * 100);}
                @ViewBag.ActualLevel %
            </td>
            <td>@item.EXPECTATION_LEVEL</td>
            
        </tr>
    }
</table>
@Html.PagedListPager(Model, page => Url.Action("AllData", "Results",
    new
    {
        page,
        param = Request.QueryString["param"],
        column = Request.QueryString["column"],
        sortOrder = Request.QueryString["sortOrder"]
    }))
